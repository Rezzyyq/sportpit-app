import { useState, useEffect } from "react";
import axios from "axios";
import "./App.css";

function Content({ view, theme, toggleTheme }) {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const [form, setForm] = useState({ name: "", quantity: "" });
  const [editId, setEditId] = useState(null);
  const [search, setSearch] = useState("");
  const [shipmentList, setShipmentList] = useState([]);

  const API_URL = "http://localhost:5000/api/products";

  // ‚¨á –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –∑ –±–µ–∫–µ–Ω–¥—É
  useEffect(() => {
    fetchProducts();
  }, []);

  const fetchProducts = async () => {
    try {
      setLoading(true);
      const res = await axios.get(API_URL);
      setProducts(res.data);
    } catch (err) {
      setError("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä–∏");
    } finally {
      setLoading(false);
    }
  };

  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });

  // ‚¨á –î–æ–¥–∞—Ç–∏ –∞–±–æ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä
  const handleAddOrEdit = async (e) => {
    e.preventDefault();
    if (!form.name || !form.quantity) return;

    try {
      if (editId) {
        await axios.put(`${API_URL}/${editId}`, form);
        setEditId(null);
      } else {
        await axios.post(API_URL, form);
      }
      setForm({ name: "", quantity: "" });
      fetchProducts(); // –æ–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏
    } catch (err) {
      console.error(err);
    }
  };

  // ‚¨á –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
  const handleDelete = async (id) => {
    if (!window.confirm("–í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä?")) return;
    try {
      await axios.delete(`${API_URL}/${id}`);
      fetchProducts();
    } catch (err) {
      console.error(err);
    }
  };

  // ‚¨á –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
  const handleEdit = (product) => {
    setForm({ name: product.name, quantity: product.quantity });
    setEditId(product._id);
  };

  // ‚¨á –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä—É
  const handleSend = (product) => {
    const name = prompt("–ö–æ–º—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ?", product.customer || "");
    const date = prompt("–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É (YYYY-MM-DD)", product.date || "");
    if (name && date) {
      const updatedProduct = { ...product, customer: name, date };
      setShipmentList([...shipmentList, updatedProduct]);
    }
  };

  const filteredProducts = Array.isArray(products)
    ? products.filter((p) => p.name.toLowerCase().includes(search.toLowerCase()))
    : [];

  if (loading) return <div className="content">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;
  if (error) return <div className="content">–ü–æ–º–∏–ª–∫–∞: {error}</div>;

  // ‚¨á –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  if (view === "stats") {
    const totalQuantity = products.reduce((acc, p) => acc + Number(p.quantity), 0);
    return (
      <div className="content">
        <h2>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
        <div>üì¶ –í—Å—å–æ–≥–æ —Ç–æ–≤–∞—Ä—ñ–≤: {products.length}</div>
        <div>üìä –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å: {totalQuantity}</div>
      </div>
    );
  }

  // ‚¨á –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
  if (view === "settings") {
    return (
      <div className="content">
        <h2>‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É</h2>
        <button onClick={toggleTheme}>
          {theme === "dark" ? "–°–≤—ñ—Ç–ª–∞ —Ç–µ–º–∞" : "–¢–µ–º–Ω–∞ —Ç–µ–º–∞"}
        </button>
      </div>
    );
  }

  // ‚¨á –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä—ñ–≤
  if (view === "shipment") {
    return (
      <div className="content">
        <h2>–í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä—ñ–≤</h2>
        {shipmentList.length === 0 ? (
          <p>–ù–µ–º–∞—î –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤</p>
        ) : (
          <table>
            <thead>
              <tr>
                <th>–ù–∞–∑–≤–∞</th>
                <th>–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th>
                <th>–ö–æ–º—É</th>
                <th>–î–∞—Ç–∞</th>
              </tr>
            </thead>
            <tbody>
              {shipmentList.map((p, i) => (
                <tr key={i}>
                  <td>{p.name}</td>
                  <td>{p.quantity}</td>
                  <td>{p.customer}</td>
                  <td>{p.date}</td>
                </tr>
              ))}
            </tbody>
          </table>
        )}
      </div>
    );
  }

  // ‚¨á –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä—ñ–≤
  return (
    <div className="content">
      <input
        type="text"
        placeholder="–ü–æ—à—É–∫..."
        value={search}
        onChange={(e) => setSearch(e.target.value)}
        className="search-input"
      />
      <form onSubmit={handleAddOrEdit} className="form">
        <input type="text" name="name" placeholder="–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É" value={form.name} onChange={handleChange} required />
        <input type="number" name="quantity" placeholder="–ö—ñ–ª—å–∫—ñ—Å—Ç—å" value={form.quantity} onChange={handleChange} required />
        <button type="submit">{editId ? "–ó–±–µ—Ä–µ–≥—Ç–∏" : "–î–æ–¥–∞—Ç–∏"}</button>
      </form>

      <div className="product-grid">
        {filteredProducts.map((p) => (
          <div key={p._id} className="product-card">
            <div>{p.name}</div>
            <div>{p.quantity}</div>
            <button onClick={() => handleEdit(p)}>‚úèÔ∏è</button>
            <button onClick={() => handleDelete(p._id)}>‚ùå</button>
            <button onClick={() => handleSend(p)}>‚úâÔ∏è</button>
          </div>
        ))}
      </div>
    </div>
  );
}

export default Content;

































